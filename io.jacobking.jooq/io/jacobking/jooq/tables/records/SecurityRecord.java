/*
 * This file is generated by jOOQ.
 */
package io.jacobking.jooq.tables.records;


import io.jacobking.jooq.tables.Security;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record5;
import org.jooq.Row5;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class SecurityRecord extends UpdatableRecordImpl<SecurityRecord> implements Record5<String, String, Integer, Integer, Boolean> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>SECURITY.USERNAME</code>.
     */
    public SecurityRecord setUsername(String value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>SECURITY.USERNAME</code>.
     */
    public String getUsername() {
        return (String) get(0);
    }

    /**
     * Setter for <code>SECURITY.PASSWORD</code>.
     */
    public SecurityRecord setPassword(String value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>SECURITY.PASSWORD</code>.
     */
    public String getPassword() {
        return (String) get(1);
    }

    /**
     * Setter for <code>SECURITY.PERMISSIONS</code>.
     */
    public SecurityRecord setPermissions(Integer value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>SECURITY.PERMISSIONS</code>.
     */
    public Integer getPermissions() {
        return (Integer) get(2);
    }

    /**
     * Setter for <code>SECURITY.LOGIN_ATTEMPTS</code>.
     */
    public SecurityRecord setLoginAttempts(Integer value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>SECURITY.LOGIN_ATTEMPTS</code>.
     */
    public Integer getLoginAttempts() {
        return (Integer) get(3);
    }

    /**
     * Setter for <code>SECURITY.FIRST_LOGIN</code>.
     */
    public SecurityRecord setFirstLogin(Boolean value) {
        set(4, value);
        return this;
    }

    /**
     * Getter for <code>SECURITY.FIRST_LOGIN</code>.
     */
    public Boolean getFirstLogin() {
        return (Boolean) get(4);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<String> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record5 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row5<String, String, Integer, Integer, Boolean> fieldsRow() {
        return (Row5) super.fieldsRow();
    }

    @Override
    public Row5<String, String, Integer, Integer, Boolean> valuesRow() {
        return (Row5) super.valuesRow();
    }

    @Override
    public Field<String> field1() {
        return Security.SECURITY.USERNAME;
    }

    @Override
    public Field<String> field2() {
        return Security.SECURITY.PASSWORD;
    }

    @Override
    public Field<Integer> field3() {
        return Security.SECURITY.PERMISSIONS;
    }

    @Override
    public Field<Integer> field4() {
        return Security.SECURITY.LOGIN_ATTEMPTS;
    }

    @Override
    public Field<Boolean> field5() {
        return Security.SECURITY.FIRST_LOGIN;
    }

    @Override
    public String component1() {
        return getUsername();
    }

    @Override
    public String component2() {
        return getPassword();
    }

    @Override
    public Integer component3() {
        return getPermissions();
    }

    @Override
    public Integer component4() {
        return getLoginAttempts();
    }

    @Override
    public Boolean component5() {
        return getFirstLogin();
    }

    @Override
    public String value1() {
        return getUsername();
    }

    @Override
    public String value2() {
        return getPassword();
    }

    @Override
    public Integer value3() {
        return getPermissions();
    }

    @Override
    public Integer value4() {
        return getLoginAttempts();
    }

    @Override
    public Boolean value5() {
        return getFirstLogin();
    }

    @Override
    public SecurityRecord value1(String value) {
        setUsername(value);
        return this;
    }

    @Override
    public SecurityRecord value2(String value) {
        setPassword(value);
        return this;
    }

    @Override
    public SecurityRecord value3(Integer value) {
        setPermissions(value);
        return this;
    }

    @Override
    public SecurityRecord value4(Integer value) {
        setLoginAttempts(value);
        return this;
    }

    @Override
    public SecurityRecord value5(Boolean value) {
        setFirstLogin(value);
        return this;
    }

    @Override
    public SecurityRecord values(String value1, String value2, Integer value3, Integer value4, Boolean value5) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached SecurityRecord
     */
    public SecurityRecord() {
        super(Security.SECURITY);
    }

    /**
     * Create a detached, initialised SecurityRecord
     */
    public SecurityRecord(String username, String password, Integer permissions, Integer loginAttempts, Boolean firstLogin) {
        super(Security.SECURITY);

        setUsername(username);
        setPassword(password);
        setPermissions(permissions);
        setLoginAttempts(loginAttempts);
        setFirstLogin(firstLogin);
        resetChangedOnNotNull();
    }

    /**
     * Create a detached, initialised SecurityRecord
     */
    public SecurityRecord(io.jacobking.jooq.tables.pojos.Security value) {
        super(Security.SECURITY);

        if (value != null) {
            setUsername(value.getUsername());
            setPassword(value.getPassword());
            setPermissions(value.getPermissions());
            setLoginAttempts(value.getLoginAttempts());
            setFirstLogin(value.getFirstLogin());
            resetChangedOnNotNull();
        }
    }
}
